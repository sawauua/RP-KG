Adversarial Examples Are a Natural Consequence of Test Error in Noise

Nicolas Ford* 1 2Justin Gilmer* 1Nicholas Carlini1Ekin D. Cubuk1
Abstract
Over the last few years, the phenomenon of ad-
versarial examples ‚Äî maliciously constructed in-
puts that fool trained machine learning models ‚Äî
has captured the attention of the research commu-
nity, especially when the adversary is restricted
to small modiÔ¨Åcations of a correctly handled in-
put. Less surprisingly, image classiÔ¨Åers also lack
human-level performance on randomly corrupted
images, such as images with additive Gaussian
noise. In this paper we provide both empirical and
theoretical evidence that these are two manifesta-
tions of the same underlying phenomenon, estab-
lishing close connections between the adversarial
robustness and corruption robustness research pro-
grams. This suggests that improving adversarial
robustness should go hand in hand with improving
performance in the presence of more general and
realistic image corruptions. Based on our results
we recommend that future adversarial defenses
consider evaluating the robustness of their meth-
ods to distributional shift with benchmarks such
as Imagenet-C.
1. Introduction
State-of-the-art computer vision models can achieve impres-
sive performance on many image classiÔ¨Åcation tasks. De-
spite this, these same models still lack the robustness of the
human visual system to various forms of image corruptions.
For example, they are distinctly subhuman when classifying
images distorted with additive Gaussian noise (Dodge &
Karam, 2017), they lack robustness to different types of
blur, pixelation, and changes in brightness (Hendrycks &
Dietterich, 2018), lack robustness to random translations
of the input (Azulay & Weiss, 2018), and even make er-
rors when foreign objects are inserted into the Ô¨Åeld of view
(Rosenfeld et al., 2018). At the same time, they are also
sensitive to small, worst-case perturbations of the input, so-
called ‚Äúadversarial examples‚Äù (Szegedy et al., 2014). This
*Equal contribution1Google Brain2This work was completed
as part of the Google AI Residency. Correspondence to: Nicolas
Ford <nicf@google.com>, Justin Gilmer <gilmer@google.com>.latter phenomenon has struck many in the machine learning
community as surprising and has attracted a great deal of
research interest, while the former has received considerably
less attention.
The machine learning community has researchers working
on each of these two types of errors: adversarial exam-
ple researchers seek to measure and improve robustness to
small-worst case perturbations of the input while corruption
robustness researchers seek to measure and improve model
robustness to distributional shift. In this work we analyze
the connection between these two research directions, and
we see that adversarial robustness is closely related to ro-
bustness to certain kinds of distributional shift. In other
words, the existence of adversarial examples follows natu-
rally from the fact that our models have nonzero test error
in certain corrupted image distributions.
We make this connection in several ways. First, in Section 4,
we provide a novel analysis of the error set of an image
classiÔ¨Åer. We see that, given the error rates we observe in
Gaussian noise, the small adversarial perturbations we ob-
serve in practice appear at roughly the distances we would
expect from a linear model, and that therefore there is no
need to invoke any strange properties of the decision bound-
ary to explain them. This relationship was also explored in
Fawzi et al. (2018b; 2016).
In Section 5, we show that improving an alternate notion of
adversarial robustness requires that error rates under large
additive noise be reduced to essentially zero.
Finally, this connection suggests that methods which are
designed to increase the distance to the decision boundary
should also improve robustness to Gaussian noise, and vice
versa. In Section 6 we conÔ¨Årm that this is true by examin-
ing both adversarially trained models and models trained
with additive Gaussian noise. We also show that measuring
corruption robustness can effectively distinguish successful
adversarial defense methods from ones that merely cause
vanishing gradients.
We hope that this work will encourage both the adversar-
ial and corruption robustness communities to work more
closely together, since their goals seem to be so closely re-
lated. In particular, it is not common for adversarial defense
methods to measure corruption robustness. Given that suc-arXiv:1901.10513v1  [cs.LG]  29 Jan 2019Adversarial Examples Are a Natural Consequence of Test Error in Noise
cessful adversarial defense methods should also improve
some types of corruption robustness we recommend that
future researchers consider evaluating corruption robustness
in addition to adversarial robustness.
2. Related Work
The broader Ô¨Åeld of adversarial machine learning studies
general ways in which an adversary may interact with an
ML system, and dates back to 2004 (Dalvi et al., 2004; Big-
gio & Roli, 2018). Since the work of Szegedy et al. (2014),
a subÔ¨Åeld has focused speciÔ¨Åcally on the phenomenon of
small adversarial perturbations of the input, or ‚Äúadversarial
examples.‚Äù Many algorithms have been developed to Ô¨Ånd
the smallest perturbation in input space which fool a classi-
Ô¨Åer (Carlini & Wagner, 2017; Madry et al., 2017). Defenses
have been proposed for increasing the robustness of classi-
Ô¨Åers to small adversarial perturbations, however many have
later been shown ineffective (Carlini & Wagner, 2017). To
our knowledge the only method which has been conÔ¨Årmed
by a third party to increase lp-robustness (for certain values
of) is adversarial training (Madry et al., 2017). However,
this method remains sensitive to slightly larger perturbations
(Sharma & Chen, 2017).
Several recent papers (Gilmer et al., 2018b; Mahloujifar
et al., 2018; Dohmatob, 2018; Fawzi et al., 2018a) use con-
centation of measure to prove rigorous upper bounds on ad-
versarial robustness for certain distributions in terms of test
error, suggesting non-zero test error may imply the existence
of adversarial perturbations. This may seem in contradiction
with empirical observations that increasing small perturba-
tion robustness tends to reduce model accuracy (Tsipras
et al., 2018). We note that these two conclusions are not
necessarily in contradiction to each other. It could be the
case that hard bounds on adversarial robustness in terms of
test error exist, but current classiÔ¨Åers have yet to approach
these hard bounds.
Because we establish a connection between adversarial ro-
bustness and model accuracy in corrupted image distribu-
tions, our results do not contradict reports that adversarial
training reduces accuracy in the clean distribution (Tsipras
et al., 2018). In fact, we Ô¨Ånd that improving adversarial
robustness also improves corruption robustness.
3. Adversarial and Corruption Robustness
Both adversarial robustness and corruption robustness can
be thought of as functions of the error set of a statistical
classiÔ¨Åer. This set, which we will denote E, is the set of
points in the input space on which the classiÔ¨Åer makes an
incorrect prediction. In this paper we will only consider
perturbed versions of training or test points, and we will
always assume the input is corrupted such that the ‚Äúcorrect‚Äùlabel for the corrupted point is the same as for the clean
point. This assumption is commonly made in works which
study model robustness to random corruptions of the input
(Hendrycks & Dietterich, 2018; Dodge & Karam, 2017).
Because we are interested in how our models perform on
both clean images and corrupted ones, we introduce some
notation for both distributions. We will write pfor the
natural image distribution, that is, the distribution from
which the training data was sampled. We will use qto denote
whichever corrupted image distribution we are working
with. A sample from qwill always look like a sample from
pwith a random corruption applied to it, like some amount
of Gaussian noise. Some examples of noisy images can be
found in Figure 10 in the appendix.
We will be interested in two quantities. The Ô¨Årst, corrup-
tion robustness under a given corrupted image distribution
q, isPxq[x =2E], the probability that a random sample
from theqis not an error. The second is called adversarial
robustness . For a clean input xand a metric on the input
spaced, letd(x;E)denote the distance from xto the nearest
point inE. The adversarial robustness of the model is then
Pxp[d(x;E)> ], the probability that a random sample
frompis not within distance of some point in the error set.
When we refer to ‚Äúadversarial examples‚Äù in this paper, we
will always mean these nearby errors.
In this work we will investigate several different mod-
els trained on the CIFAR-10 and ImageNet datasets. For
CIFAR-10 we look at the naturally trained and adversarially
trained models which have been open-sourced by Madry
et al. (2017). We also trained the same model on CIFAR-10
with Gaussian data augmentation. For ImageNet, we inves-
tigate an Inception v3 (Szegedy et al., 2016) trained with
Gaussian data augmentation. In all cases, Gaussian data aug-
mentation was performed by Ô¨Årst sampling a uniformly
between 0 and some speciÔ¨Åed upper bound and then adding
random Gaussian noise at that scale. Additional training de-
tails can be found in Appendix A. We were unable to study
the effects of adversarial training on ImageNet because no
robust open sourced model exists. (The models released in
Tram√®r et al. (2017) only minimally improve robustness to
the white box PGD adversaries we consider here.)
4. Errors in Gaussian Noise Suggest
Adversarial Examples
We will start by examining the relationship between adver-
sarial and corruption robustness in the case where qconsists
of images with additive Gaussian noise.
The Linear Case. For linear models, the error rate in Gaus-
sian noise exactly determines the distance to the decision
boundary. This observation was also made in Fawzi et al.
(2016; 2018b).Adversarial Examples Are a Natural Consequence of Test Error in Noise
x0E
A
pn
Bd(x0;E)
Figure 1. When the input dimension, n, is large and the model
is linear, even a small error rate in additive noise implies the
existence of small adversarial perturbations. For a point x0in
image space, most samples from N(x0;2I)(pointB) lie close
to a sphere of radius pnaroundx0, drawn here as a circle. For
a linear model the error set Eis a half-space, and the error rate
is approximately equal to the fraction of the sphere lying in
this half-space. The distance d(x0;E)fromx0to its nearest error
(pointA) is also drawn. Note the relationship between ,, and
d(x0;E)does not depend on the dimension. However, because
the typical distance to a sample from the Gaussian is pnthe
ratio between the distance from x0toAand the distance from x0
toBshrinks as the dimension increases.
It will be useful to keep the following intuitive picture in
mind. In high dimensions, most samples from the Gaussian
distributionN(x0;2I)lie close to the surface of a sphere
of radiuscentered at x0. The decision boundary of a
linear model is a plane, and since we are assuming that the
‚Äúcorrect‚Äù label for each noisy point is the same as the label
forx0, our error set is simply the half-space on the far side
of this plane.
The relationship between adversarial and corruption robust-
ness corresponds to a simple geometric picture. If we slice a
sphere with a plane, as in Figure 1, the distance to the near-
est error is equal to the distance from the plane to the center
of the sphere, and the corruption robustness is the fraction
of the surface area cut off by the plane. This relationship
changes drastically as the dimension increases: most of the
surface area of a high-dimensional sphere lies very close
to the equator, which means that cutting off even, say, 1%
of the surface area requires a plane which is very close to
the center. Thus, for a linear model, even a relatively small
error rate on Gaussian noise implies the existence of errors
very close to the clean image (i.e., an adversarial example).
To formalize this relationship, pick some clean image x0
and consider the Gaussian distribution N(x0;2I). For a
Ô¨Åxed, let(x0;)be thefor which the error rate is ,
that is, for which
ExN (x0;2I)[x2E] =:Then, letting ddenotel2distance, we have
d(x0;E) = (x0;) 1(); (1)
where
(t) =1p
2Zt
 1exp( x2=2)dx
is the cdf of the univariate standard normal distribution.
(Note that  1()is negative when <1
2.)
This expression depends only on the error rate and the
standard deviation of a single component, and not directly
on the dimension, but the dimension appears if we consider
the distance from x0to a typical sample from N(x0;2I),
which ispn. When the dimension is large the distance to
the decision boundary will be signiÔ¨Åcantly smaller than the
distance to a noisy image.
For example, this formula says that a linear model with an
error rate of 0:01in noise with = 0:1will have an error at
distance about 0:23. In three dimensions, a typical sample
from this noise distribution will be at a distance of around
0:1p
30:17. However when n= 3072 , the dimension of
the CIFAR-10 image space, these samples lie at a distance of
about 5:54. So, in the latter case, a 1% error rate on random
perturbations of size 5:54implies an error at distance 0:23,
more than 20 times closer. Detailed curves showing this
relationship can be found in Appendix F.
Comparing Neural Networks to the Linear Case. The
decision boundary of a neural network is, of course, not
linear. However, by comparing the ratio between d(x0;E)
and(x0;)for neural networks to what it would be for a
linear model, we can investigate the relationship between ad-
versarial and corruption robustness. We ran experiments on
several neural network image classiÔ¨Åers and found results
that closely resemble Equation 1. Adversarial examples
therefore are not ‚Äúsurprisingly‚Äù close to x0given the perfor-
mance of each model in Gaussian noise.
Concretely, we examine this relationship when = 0:01.
For each test point, we compare (x0;0:01)to an estimate
ofd(x0;E). Because it is not feasible to compute d(x0;E)
exactly, we instead search for an error using PGD (Madry
et al., 2017) and report the nearest error we can Ô¨Ånd.
Figure 2 shows the results for several CIFAR-10 and Ima-
geNet models, including ordinarily trained models, models
trained with Gaussian data augmentation with = 0:4, and
an adversarially trained CIFAR-10 model. We also included
a line representing how these quantities would be related for
a linear model, as in Equation 1. Because most test points
lie close to the predicted relationship for a linear model, we
see that the half-space model shown in Figure 1 accurately
predicts the existence of small perturbation adversarial ex-
amples.Adversarial Examples Are a Natural Consequence of Test Error in Noise
Figure 2. (Top) Comparing the l2distance to the decision boundary with the for which the error rate in Gaussian noise is 1%. Each
point represents 50 images from the test set, and the median values for each coordinate are shown. The error bars cover the 25th to
75th percentiles. The PGD attack was run with = 1, so the distances to the decision boundary reported here are cut off at 1. (Bottom)
Histograms of the xcoordinates from the above plots. A misclassiÔ¨Åed point is assigned = 0.
It is interesting to observe how each training procedure
affected the two quantities we measured. First, adversarial
training and Gaussian data augmentation increased both
(x0;0:01)andd(x0;E)on average. The adversarially
trained model deviates from the linear case the most, but it
does so in the direction of greater distances to the decision
boundary. While both augmentation methods do improve
both quantities, Gaussian data augmentation had a greater
effect on(as seen in the histograms) while adversarial
training had a greater effect on d. We explore this further in
Section 6.
Visual ConÔ¨Årmation of the Half-space Model In Figure 3
we draw two-dimensional slices in image space through
three points. (Similar visualizations have appeared in Fawzi
et al. (2018b), and are called ‚Äúchurch window plots.‚Äù)
This visualized decision boundary closely matches the half-
space model in Figure 1. We see that an error found in
Gaussian noise lies in the same connected component of the
error set as an error found using PGD, and that at this scale
that component visually resembles a half-space. This Ô¨Ågure
also illustrates the connection between adversarial example
research and corruption robustness research. To measure
adversarial robustness is to ask whether or not there are any
errors in the l1ball ‚Äî the small diamond-shaped region
in the center of the image ‚Äî and to measure corruptionrobustness is to measure the volume of the error set in the
deÔ¨Åned noise distribution. At least in this slice, nothing
distinguishes the PGD error from any other point in the
error set apart from its proximity to the clean image.
We give many more church window plots in Appendix G.
5. Concentration of Measure for Noisy Images
There is an existing research program (Gilmer et al., 2018b;
Mahloujifar et al., 2018; Dohmatob, 2018) which proves
hard upper bounds on adversarial robustness in terms of
the error rate of a model. This phenomenon is sometimes
called concentration of measure . Because proving a the-
orem like this requires understanding the distribution in
question precisely, these results typically deal with simple
‚Äútoy‚Äù distributions rather than those corresponding to real
data. In this section we take a Ô¨Årst step toward bridging this
gap. By comparing our models to a classical concentration
of measure bound for the Gaussian distribution, we gain
another perspective on our motivating question.
The Gaussian Isoperimetric Inequality. As in Section 4,
letx0be a correctly classiÔ¨Åed image and consider the dis-
tributionq=N(x0;2I). Noteqis the distribution of
random Gaussian perturbations of x0. The previous section
discussed the distance from x0to its nearest error. In thisAdversarial Examples Are a Natural Consequence of Test Error in Noise
Figure 3. Two-dimensional slices of image space together with the classes assigned by trained models. Each slice goes through three
points, a clean image from the test set (black), an error found by randomly perturbing the center image with Gaussian noise (blue), and an
error found using a targeted PGD attack (red). The black circles have radius pn, indicating the typical size of the Gaussian perturbation
used. The diamond-shaped region in the center of the right image shows the l1ball of radius 8=255. In both slices, the decision boundary
resembles a half-space as predicted in Figure 1, demonstrating how non-zero error rate in noise predicts the existence of small adversarial
perturbations. The CIFAR-10 model on the left was evaluated with = 0:04(black circle has radius 2:22), where 0:21% of Gaussian
perturbations are classiÔ¨Åed as ‚Äúfrog‚Äù (cyan region). The adversarial error was found at distance 0:159while the half-space model predicts
errors at distance 0:081. The ImageNet model on the right was evaluated at = 0:08(black circle has radius 31:4) where 0:1% of
Gaussian perturbations were misclassiÔ¨Åed as ‚Äúminiture poodle‚Äù (cyan). The adversarial error has distance 0:189while the half-space
model predicts errors at distance 0:246. For the panda picture on the right we also found closer errors than what is shown by using an
untargeted attack (an image was assigned class ‚Äúindri‚Äù at distance 0:024). Slices showing more complicated behavior can be found in
Appendix G.
section we will instead discuss the distance from a typical
sample from q(e.g. pointBin Figure 1) to its nearest error.
For random samples from q, there is a precise sense in which
small adversarial perturbations exist only because test error
is nonzero. That is, given the error rates we actually observe
on noisy images, most noisy images must be close to the
error set. This result holds completely independently of any
assumptions about the model and follows from a fundamen-
tal geometric property of the Gaussian distribution, which
we will now make precise.
Let
q(E)be the median distance from one of these noisy
images to the nearest error. (In other words, it is the for
which Pxq[d(x;E)] =1
2.) As before, let Pxq[x2
E]be the probability that a random Gaussian perturbation of
x0lies inE. It is possible to deduce a bound relating these
two quantities from the Gaussian isoperimetric inequality
(Borell, 1975). The form we will use is:
Theorem (Gaussian Isoperimetric Inequality) .Letq=
N(0;2I)be the Gaussian distribution on Rnwith vari-
ance2I, and, for some set ERn, let=Pxq[x2E].
As before, write for the cdf of the univariate standard
normal distribution. If 1
2, then
q(E) = 0 . Otherwise,

q(E)  1(), with equality when Eis a half space.
In particular, for any machine learning model for which
the error rate in the distribution qis at least, the mediandistance to the nearest error is at most   1(). Because
each coordinate of a multivariate normal is a univariate
normal,  1()is the distance to a half space for which
the error rate is . In other words, the right hand side of the
inequality is the same expression that appears in Equation 1.
So, among models with some Ô¨Åxed error rate Pxq[x2E],
the most robust are the ones whose error set is a half space
(as shown in Figure 1). In Appendix E we will give a more
common statement of the Gaussian isoperimetric inequality
along with a proof of the version presented here.
Comparing Neural Networks to the Isoperimetric
Bound. We evaluated these quantities for several models
on the CIFAR-10 and ImageNet test sets.
As in Section 4, we report an estimate of 
q. For each
test image, we took 1,000 samples from the corresponding
Gaussian and estimated 
qusing PGD with 200 steps on
each sample and reported the median.
We Ô¨Ånd that for the Ô¨Åve models we considered, the rela-
tionship between our estimate of 
q(E)andPxq[x2E]
is already close to optimal. This is visualized in Figure 4.
For CIFAR-10, adversarial training improves robustness to
small perturbations, but the gains are primarily because er-
ror rates in Gaussian noise were improved. In particular, it is
clear from the graph on the bottom left that adversarial train-
ing increases the at which the error rate is 1% on average.
This shows that improved adversarial robustness results inAdversarial Examples Are a Natural Consequence of Test Error in Noise
Figure 4. These plots give two ways to visualize the relationship between the error rate in noise and the distance from noisy points to the
decision boundary (found using PGD). Each point on each plot represents one image from the test set. On the top row, we compare the
error rate of the model with Gaussian perturbations at = 0:1to the distance from the median noisy point to its nearest error. On the
bottom row, we compare the at which the error rate is 0:01to this same median distance. (These are therefore similar to the plots in
Figure 2.) The thick black line at the top of each plot is the upper bound provided by the Gaussian isoperimetric inequality. We include
data from a model trained on clean images, an adversarially trained model, and a model trained on Gaussian noise ( = 0:4.)
improved robustness to large random perturbations, as the
isoperimetric inequality says it must .
6. Evaluating Corruption Robustness
The previous two sections show a relationship between ad-
versarial robustness and one type of corruption robustness.
This suggests that methods designed to improve adversarial
robustness ought to also improve corruption robustness, and
vice versa. In this section we investigate this relationship.
We analyzed the performance of our models on the cor-
ruption robustness benchmark described in Hendrycks &
Dietterich (2018). There are 15 different corruptions in this
benchmark, each of which is tested at Ô¨Åve different levels
of severity. The results are summarized in Figure 6, where
we have aggregated the corruption types based on whether
the ordinarily trained model did better or worse than the
augmented models. We found a signiÔ¨Åcant difference in per-
formance on this benchmark when the model is evaluated on
the compressed images provided with the benchmark rather
than applying the corruptions in memory. (In this section
we report performance on corruptions applied in-memory.)
Figure 5 shows an example for the Gaussian-5 corruption,
where performance degraded from 57% accuracy (in mem-ory) to 10% accuracy (compressed images). Detailed results
on both versions of this benchmark are presented in Ap-
pendix B.
Gaussian data augmentation and adversarial training both
improve the overall benchmark1, which requires averaging
the performance across all corruptions, and the results were
quite close. Adversarial training helped more with blur-
ring corruptions and Gaussian data augmentation helped
more with noise corruptions. Interestingly, both methods
performed much worse than the clean model on the fog and
contrast corruptions. For example, the adversarially trained
model was 55% accurate on the most severe contrast cor-
ruption compared to 85% for the clean model. Note that
Hendrycks & Dietterich (2018) also observed that adversar-
ial training improves robustness on this benchmark on Tiny
ImageNet.
The fact that adversarial training is so successful against the
noise corruptions further supports the connection we have
been describing. For other corruptions, the relationship is
more complicated, and it would be interesting to explore
this in future work.
1In reporting overall performance on this benchmark, we omit
the Gaussian noise corruption.Adversarial Examples Are a Natural Consequence of Test Error in Noise
Figure 5. Performance on the Imagenet-C corruptions may vary dramatically depending on whether or not the model is evaluated on the
publicly released compressed images vs applying the corruptions directly in memory. For example, an InceptionV3 model trained with
Gaussian data augmentation was 57% accurate on the Gaussian-5 corruption when evaluated in memory (example image left). This same
model was only 10% accurate on the publicly released compressed images (example image right). The model prediction and conÔ¨Ådence
on each image is also shown. Note the image on the right was not modiÔ¨Åed adversarially , instead the drop in model performance is
due entirely to subtle compression artifacts. This severe degradation in model performance is particularly surprising because differences
between the compressed and uncompressed images are difÔ¨Åcult to spot for a human. This demonstrates the extreme brittleness of neural
networks to distributional shift .
We also evaluated these two augmentation methods on stan-
dard measures of lprobustness. We see a similar story there:
while adversarial training performs better, Gaussian data
augmentation does improve adversarial robustness as well.
Gaussian data augmenation has been proposed as an adver-
sarial defense in prior work (Zantedeschi et al., 2017). Here
we evaluate this method not to propose it as a novel defense
but to provide further evidence of the connection between
adversarial and corruption robustness.
We also considered the MNIST adversarially trained model
from Madry et al. (2017), and found it to be a special case
where robustness to small perturbations was increased while
generalization in noise was not improved (see Appendix D).
This is because this model violates the linearity assumption
discussed in Section 4.
Corruption Robustness as a Sanity Check for Defenses.
We also analyzed the performance several previously pub-
lished adversarial defense strategies in Gaussian noise.
These methods have already been shown to result in van-
ishing gradients, which causes standard optimization proce-
dures to fail to Ô¨Ånd errors, rather than actually improving
adversarial robustness (Athalye et al., 2018). We Ô¨Ånd that
these methods also show no improvement in Gaussian noise.
The results are shown in Figure 7. Had these prior defenses
performed an analysis like this, they would have been ableto determine that their methods relied on vanishing gradients
and fail to improve robustness.
Obtaining Zero Test Error in Noise is Nontrivial. It is
important to note that applying Gaussian data augmenta-
tion does not reduce error rates in Gaussian noise to zero.
For example, we performed Gaussian data augmentation on
CIFAR-10 at =:15and obtained 99.9% training accuracy
but 77.5% test accuracy in the same noise distribution. (For
comparison, the naturally trained obtains 95% clean test
accuracy.) Previous work (Dodge & Karam, 2017) has also
observed that obtaining perfect generalization in large Gaus-
sian noise is nontrivial. This mirrors Schmidt et al. (2018),
which found that adversarial robustness did not generalize
to the test set, providing yet another similarity between ad-
versarial and corruption robustness. This is perhaps not
surprising given that error rates on the clean test set are also
non-zero. Although the model is in some sense ‚Äúsuperhu-
man‚Äù with respect to clean test accuracy, it still makes many
mistakes on the clean test set that a human would never
make. We collected some examples in Appendix I. More
detailed results on training and testing in noise can be found
in Appendices C and H.Adversarial Examples Are a Natural Consequence of Test Error in Noise
Clean
Blurring CorruptionsNoise Corruptions Fog and ContrastAll Corruptions0.00.20.40.60.81.0Top 1 Accuracy %Corruption Robustness (ImageNet)
naturally trained
gaussian data augmentation (sigma=.4)
Figure 6. The performance of the models we considered on the corruption robustness benchmark, together with our measurements of
those models‚Äô robustness to small lpperturbations. For all the robustness tests we used PGD with 100 steps and a step size of =25. The
adversarially trained CIFAR-10 model is the open sourced model from Madry et al. (2017).
7. Conclusion
This paper investigates whether we should be surprised to
Ô¨Ånd adversarial examples as close as we do, given the error
rates we observe in corrupted image distributions. After
running several experiments, we argue that the answer to
this question is no. SpeciÔ¨Åcally:
1.The nearby errors we can Ô¨Ånd show up at the same
distance scales we would expect from a linear model
with the same corruption robustness.
2. Concentration of measure shows that a non-zero error
rate in Gaussian noise logically implies the existence
of small adversarial perturbations of noisy images.
3.Finally, training procedures designed to improve adver-
sarial robustness also improve many types of corrup-
tion robustness, and training on Gaussian noise moder-
ately improves adversarial robustness.
In light of this, we believe it would be beneÔ¨Åcial for the
adversarial defense literature to start reporting generaliza-
tion to distributional shift, such as the common corruptionbenchmark introduced in Hendrycks & Dietterich (2018),
in addition to empirical estimates of adversarial robustness.
There are several reasons for this recommendation.
First, a varied suite of corruptions can expose failure modes
of a model that we might otherwise miss. For example, we
found that adversarial training signiÔ¨Åcantly degraded perfor-
mance on the fog and contrast corruptions despite improving
small perturbation robustness. In particular, performance
on constrast-5 dropped to 55.3% accuracy vs 85.7% for the
vanilla model (see Appendix B for more details).
Second, measuring corruption robustness is signiÔ¨Åcantly
easier than measuring adversarial robustness ‚Äî computing
adversarial robustness perfectly requires solving an NP-
hard problem for every point in the test set (Katz et al.,
2017). Since Szegedy et al. (2014), hundreds of adversarial
defense papers have been published. To our knowledge, only
one (Madry et al., 2017) has reported robustness numbers
which were conÔ¨Årmed by a third party. We believe the
difÔ¨Åculty of measuring robustness under the usual deÔ¨Ånition
has contributed to this unproductive situation.
Third, all of the failed defense strategies we examined alsoAdversarial Examples Are a Natural Consequence of Test Error in Noise
Figure 7. (Left) The performance in Gaussian noise of the CIFAR models described in this paper. (Right) The performance in Gaussian
noise of several previously published defenses for ImageNet, along with an Imagenet model trained on Gaussian noise at = 0:4for
comparison. For each point we ran ten trials; the error bars show one standard deviation. All of these defenses are now known not
to improve adversarial robustness (Athalye et al., 2018). The defense strategies include bitdepth reduction (Guo et al., 2017), JPEG
compression (Guo et al., 2017; Dziugaite et al., 2016; Liu et al., 2018; Aydemir et al., 2018; Das et al., 2018; 2017), Pixel DeÔ¨Çection
(Prakash et al., 2018), total variance minimization (Guo et al., 2017), respresentation-guided denoising (Liao et al., 2018), and random
resizing and random padding of the input image (Xie et al., 2017).
failed to improve performance in Gaussian noise. For this
reason, we should be highly skeptical of defense strategies
that only claim improved lprobustness but are unable to
demonstrate robustness to distributional shift.
Finally, if the goal is improving the security of our models
in adversarial settings, errors on corrupted images already
imply that our models are not secure. Until our models are
perfectly robust in the presence of average-case corruptions,
they will not be robust in worst-case settings.
The communities of researchers studying adversarial and
corruption robustness seem to be attacking essentially the
same problem in two different ways. We believe that the
corruption robustness problem is also interesting indepen-
dently of its connection to adversarial examples, and we
hope that the results presented here will encourage more
collaboration between these two communities.
References
Anish Athalye, Nicholas Carlini, and David Wagner. Ob-
fuscated gradients give a false sense of security: Circum-
venting defenses to adversarial examples. arXiv preprint
arXiv:1802.00420 , 2018.
Ayse Elvan Aydemir, Alptekin Temizel, and Tugba Taskaya
Temizel. The effects of jpeg and jpeg2000 compression
on attacks using adversarial examples. arXiv preprint
arXiv:1803.10418 , 2018.
Aharon Azulay and Yair Weiss. Why do deep convolutional
networks generalize so poorly to small image transforma-
tions? arXiv preprint arXiv:1805.12177 , 2018.
Battista Biggio and Fabio Roli. Wild patterns: Ten yearsafter the rise of adversarial machine learning. Pattern
Recognition , 84:317‚Äì331, 2018.
Christer Borell. The Brunn-Minkowski inequality in Gauss
space. Inventiones mathematicae , 30(2):207‚Äì216, 1975.
Nicholas Carlini and David Wagner. Adversarial examples
are not easily detected: Bypassing ten detection methods.
arXiv preprint arXiv:1705.07263 , 2017.
Ekin D Cubuk, Barret Zoph, Dandelion Mane, Vijay Vasude-
van, and Quoc V Le. Autoaugment: Learning augmenta-
tion policies from data. arXiv preprint arXiv:1805.09501 ,
2018.
Nilesh Dalvi, Pedro Domingos, Sumit Sanghai, Deepak
Verma, et al. Adversarial classiÔ¨Åcation. In Proceedings
of the tenth ACM SIGKDD international conference on
Knowledge discovery and data mining , pp. 99‚Äì108. ACM,
2004.
Nilaksh Das, Madhuri Shanbhogue, Shang-Tse Chen, Fred
Hohman, Li Chen, Michael E Kounavis, and Duen Horng
Chau. Keeping the bad guys out: Protecting and vaccinat-
ing deep learning with jpeg compression. arXiv preprint
arXiv:1705.02900 , 2017.
Nilaksh Das, Madhuri Shanbhogue, Shang-Tse Chen, Fred
Hohman, Siwei Li, Li Chen, Michael E Kounavis, and
Duen Horng Chau. Shield: Fast, practical defense and
vaccination for deep learning using jpeg compression.
arXiv preprint arXiv:1802.06816 , 2018.
Samuel Dodge and Lina Karam. A study and comparison
of human and deep learning recognition performance un-
der visual distortions. In Computer Communication andAdversarial Examples Are a Natural Consequence of Test Error in Noise
Networks (ICCCN), 2017 26th International Conference
on, pp. 1‚Äì7. IEEE, 2017.
Elvis Dohmatob. Limitations of adversarial robust-
ness: strong no free lunch theorem. arXiv preprint
arXiv:1810.04065 , 2018.
Gintare Karolina Dziugaite, Zoubin Ghahramani, and
Daniel M Roy. A study of the effect of jpg compression
on adversarial images. arXiv preprint arXiv:1608.00853 ,
2016.
Alhussein Fawzi, Seyed-Mohsen Moosavi-Dezfooli, and
Pascal Frossard. Robustness of classiÔ¨Åers: from adversar-
ial to random noise. In Advances in Neural Information
Processing Systems , pp. 1632‚Äì1640, 2016.
Alhussein Fawzi, Hamza Fawzi, and Omar Fawzi. Ad-
versarial vulnerability for any classiÔ¨Åer. arXiv preprint
arXiv:1802.08686 , 2018a.
Alhussein Fawzi, Seyed-Mohsen Moosavi-Dezfooli, Pascal
Frossard, and Stefano Soatto. Empirical study of the
topology and geometry of deep networks. In IEEE CVPR ,
number CONF, 2018b.
Robert Geirhos, Patricia Rubisch, Claudio Michaelis,
Matthias Bethge, Felix A Wichmann, and Wieland Bren-
del. Imagenet-trained cnns are biased towards texture;
increasing shape bias improves accuracy and robustness.
arXiv preprint arXiv:1811.12231 , 2018.
Justin Gilmer, Ryan P Adams, Ian Goodfellow, David An-
dersen, and George E Dahl. Motivating the rules of the
game for adversarial example research. arXiv preprint
arXiv:1807.06732 , 2018a.
Justin Gilmer, Luke Metz, Fartash Faghri, Samuel S
Schoenholz, Maithra Raghu, Martin Wattenberg, and
Ian Goodfellow. Adversarial spheres. arXiv preprint
arXiv:1801.02774 , 2018b.
Chuan Guo, Mayank Rana, Moustapha Cisse, and Laurens
van der Maaten. Countering adversarial images using
input transformations. arXiv preprint arXiv:1711.00117 ,
2017.
Dan Hendrycks and Thomas G Dietterich. Benchmark-
ing neural network robustness to common corruptions
and surface variations. arXiv preprint arXiv:1807.01697 ,
2018.
Guy Katz, Clark Barrett, David L Dill, Kyle Julian, and
Mykel J Kochenderfer. Reluplex: An efÔ¨Åcient smt solver
for verifying deep neural networks. In International
Conference on Computer Aided VeriÔ¨Åcation , pp. 97‚Äì117.
Springer, 2017.Fangzhou Liao, Ming Liang, Yinpeng Dong, Tianyu Pang,
Jun Zhu, and Xiaolin Hu. Defense against adversarial
attacks using high-level representation guided denoiser.
InProceedings of the IEEE Conference on Computer
Vision and Pattern Recognition , pp. 1778‚Äì1787, 2018.
Zihao Liu, Qi Liu, Tao Liu, Yanzhi Wang, and Wujie
Wen. Feature distillation: Dnn-oriented jpeg com-
pression against adversarial examples. arXiv preprint
arXiv:1803.05787 , 2018.
Aleksander Madry, Aleksander Makelov, Ludwig Schmidt,
Dimitris Tsipras, and Adrian Vladu. Towards deep learn-
ing models resistant to adversarial examples. arXiv
preprint arXiv:1706.06083 , 2017.
Saeed Mahloujifar, Dimitrios I Diochnos, and Mohammad
Mahmoody. The curse of concentration in robust learn-
ing: Evasion and poisoning attacks from concentration of
measure. arXiv preprint arXiv:1809.03063 , 2018.
Aaditya Prakash, Nick Moran, Solomon Garber, Antonella
DiLillo, and James Storer. DeÔ¨Çecting adversarial attacks
with pixel deÔ¨Çection. In Proceedings of the IEEE Con-
ference on Computer Vision and Pattern Recognition , pp.
8571‚Äì8580, 2018.
Amir Rosenfeld, Richard Zemel, and John K Tsotsos. The
elephant in the room. arXiv preprint arXiv:1808.03305 ,
2018.
Ludwig Schmidt, Shibani Santurkar, Dimitris Tsipras, Ku-
nal Talwar, and Aleksander M Àõ adry. Adversarially ro-
bust generalization requires more data. arXiv preprint
arXiv:1804.11285 , 2018.
Yash Sharma and Pin-Yu Chen. Breaking the madry defense
model with l1-based adversarial examples. arXiv preprint
arXiv:1710.10733 , 2017.
Christian Szegedy, Wojciech Zaremba, Ilya Sutskever, Joan
Bruna, Dumitru Erhan, Ian Goodfellow, and Rob Fergus.
Intriguing properties of neural networks. In International
Conference on Learning Representations , 2014. URL
http://arxiv.org/abs/1312.6199 .
Christian Szegedy, Vincent Vanhoucke, Sergey Ioffe, Jon
Shlens, and Zbigniew Wojna. Rethinking the inception
architecture for computer vision. In Proceedings of the
IEEE conference on computer vision and pattern recogni-
tion, pp. 2818‚Äì2826, 2016.
Florian Tram√®r, Alexey Kurakin, Nicolas Papernot, Dan
Boneh, and Patrick McDaniel. Ensemble adversar-
ial training: Attacks and defenses. arXiv preprint
arXiv:1705.07204 , 2017.Adversarial Examples Are a Natural Consequence of Test Error in Noise
Dimitris Tsipras, Shibani Santurkar, Logan Engstrom,
Alexander Turner, and Aleksander Madry. Robustness
may be at odds with accuracy. International Confer-
ence on Learning Representations , 2018. URL https:
//openreview.net/forum?id=SyxAb30cY7 .
Z. Wang and A. C. Bovik. Mean squared error: Love it or
leave it? a new look at signal Ô¨Ådelity measures. IEEE
Signal Processing Magazine , 26(1):98‚Äì117, 2009.
Chaowei Xiao, Jun-Yan Zhu, Bo Li, Warren He, Mingyan
Liu, and Dawn Song. Spatially transformed adversarial
examples. arXiv preprint arXiv:1801.02612 , 2018.
Cihang Xie, Jianyu Wang, Zhishuai Zhang, Zhou Ren, and
Alan Yuille. Mitigating adversarial effects through ran-
domization. arXiv preprint arXiv:1711.01991 , 2017.
Sergey Zagoruyko and Nikos Komodakis. Wide residual
networks. arXiv preprint arXiv:1605.07146 , 2016.
Valentina Zantedeschi, Maria-Irina Nicolae, and Ambrish
Rawat. EfÔ¨Åcient defenses against adversarial attacks.
InProceedings of the 10th ACM Workshop on ArtiÔ¨Åcial
Intelligence and Security , pp. 39‚Äì49. ACM, 2017.Adversarial Examples Are a Natural Consequence of Test Error in Noise
A. Training Details
Models trained on CIFAR-10. We trained the Wide-ResNet-28-10 model (Zagoruyko & Komodakis, 2016) using standard
data augmentation of Ô¨Çips, horizontal shifts and crops in addition to Gaussian noise independently sampled for each image
in every minibatch. The models were trained with the open-source code by Cubuk et al. (2018) for 200 epochs, using the
same hyperparameters which we summarize here: a weight decay of 5e-4, learning rate of 0.1, batch size of 128. The
learning rate was decayed by a factor of 0.2 at epochs 60, 120, 160.
Models trained on ImageNet. The Inception v3 model (Szegedy et al., 2016) was trained with a learning rate of 1.6, batch
size of 4096, and weight decay of 8e-5. During training, Gaussian noise was independently sampled for each image in every
minibatch. The models were trained for 130 epochs, where the learning rate was decayed by a factor of 0.975 every epoch.
Learning rate was linearly increased from 0 to the value of 1.6 over the Ô¨Årst 10 epochs.
B. Full Corruption Robustness Results
In this section we examine the corruption robustness of both adversarially trained models and models trained with Gaussian
data augmentation. Full results are shown in Tables 1, 2. We highlight several interesting Ô¨Åndings from these experiments.
On CIFAR-10-C, Gaussian data augmentation outperforms adversarial training on the overall benchmark. However,
adversarial training is better on all of the blurring corruptions.
The publicly released Imagenet-C dataset as .jpeg Ô¨Åles is signiÔ¨Åcantly harder than the same dataset when the corruptions
are applied in memory. It appears that this is due to additional artifacts added to the image from the JPEG compression
algorithm (see Figure 8). Future work should make care of this distinction when comparing the performance of their
methods, in particular we note that the results in (Geirhos et al., 2018; Hendrycks & Dietterich, 2018) were both
evaluated on the jpeg Ô¨Åles.
Both adversarial training and Gaussian data augmenation signiÔ¨Åcantly degrade performance on the severe fog and
constrast corruptions (Tables 3, 4). This highlights the importance of evaluating on a broad suite of corruptions as
simply evaluating on worst-case lpperturbations or random noise will not expose all failings of a model. This also
highlights the need for developing methods that improve robustness to all corruptions. Towards this end the exciting
new ‚ÄúStylized ImageNet‚Äù(Geirhos et al., 2018) data augmentation process achieves moderate improvements on all
corruptions, at least on the publicly released .jpeg Ô¨Åles.
Figure 8. Visualizing the effects of jpeg compression on white noise. The subtle difference between the compressed and uncompressed
images is enough to degrade model performance on several of the Imagenet-C corruptions.Adversarial Examples Are a Natural Consequence of Test Error in Noise
Table 1. Measuring the improvements of Gaussian data augmentation on corruption robustness for Imagenet-C. For this ta-
ble we evaluate both on corruptions in memory to the existing Imagenet validation set using the code at https://github.
com/hendrycks/robustness and on the compressed version of the dataset from https://drive.google.com/drive/
folders/1HDVw6CmX3HiG0ODFtI75iIfBDxSiSz2K?usp=sharing . We found that model performance when the corruption
was applied in memory is higher than performance on the publicly released .jpeg Ô¨Åles that already have the corruptions applied to them.
Unfortunately, we were unable to evaluate all corruptions due to issues installing some of the dependencies, these are marked with a ?. All
numbers are model accuracies averaged over the 5 corruption severities.
Noise Blur
Training All Gaussian Shot Impulse Defocus Glass Motion Zoom
Vanilla InceptionV3 45.0 40.3 38.7 38.0 40.3 26.4 ? 31.6
Gaussian (= 0:4)52.6 67.5 67.5 66.4 43.4 39.4 ? 33.0
Weather Digital
Training Snow Frost Fog Brightness Contrast Elastic Pixelate JPEG
Vanilla InceptionV3 ? ? 60.0 68.6 45.2 46.8 42.8 56.2
Gaussian (= 0:4) ? ? 54.0 68.8 39.0 51.6 51.8 63.6
Noise (Compressed) Blur (Compressed)
Training All Gaussian Shot Impulse Defocus Glass Motion Zoom
Vanilla InceptionV3 38.8 36.6 34.3 34.7 31.1 19.3 35.3 30.1
Gaussian (= 0:4)42.7 40.3 38.8 37.7 32.9 29.8 35.3 33.1
Weather (Compressed) Digital (Compressed)
Training Snow Frost Fog Brightness Contrast Elastic Pixelate JPEG
Vanilla InceptionV3 33.1 34.0 52.4 66.0 35.9 47.8 38.2 50.9
Gaussian (= 0:4)36.6 43.5 52.3 67.1 35.8 52.2 47.0 55.5
Table 2. Comparing the corruption robustness of adversarial training and Gaussian data augmentation on the CIFAR-10-C dataset.
For this table we evaluate on the publicly release .npy Ô¨Åles found at https://drive.google.com/drive/folders/
1HDVw6CmX3HiG0ODFtI75iIfBDxSiSz2K?usp=sharing . Unlike the Imagenet-C dataset which was released as .jpeg Ô¨Åles,
there was no additional noise applied when saving the images as .npy Ô¨Åles. All numbers are model accuracies averaged over the 5
corruption severities.
Noise Digital
Training All Speckle Shot Impulse Contrast Elastic Pixelate JPEG
Vanilla Wide-ResNet-28-10 76.3 62.8 59.3 53.3 92.2 84.8 74.0 77.2
Adversarialy Trained 80.9 81.8 82.8 68.8 77.0 81.8 85.3 85.4
Gaussian (= 0:1) 81.2 91.1 91.8 81.5 58.9 82.2 89.0 90.0
Gaussian (= 0:4) 74.7 84.6 84.6 84.5 41.5 75.4 81.2 82.9
Weather Blur
Training Snow Fog Brightness Defocus Glass Motion Zoom Gaussian
Vanilla Wide-ResNet-28-10 83.3 90.4 94.0 85.5 51.1 81.2 79.9 75.3
Adversarialy Trained 82.6 72.7 87.1 83.5 80.2 80.5 82.8 82.1
Gaussian (= 0:1) 87.3 71.5 91.8 80.0 79.6 71.6 77.2 74.2
Gaussian (= 0:4) 78.0 51.8 80.1 77.0 77.9 72.0 74.8 74.4Adversarial Examples Are a Natural Consequence of Test Error in Noise
Table 3. Detailed results for the fog and contrast corruptions on ImageNet-C highlighting the effect of the severity on both the compressed
and uncompressed versions of the data. When the corruption is applied in memory, Gaussian data augmentation degrades performance in
comparison to a clean model. However, when evaluating on the compressed version of this dataset this degradation in comparison to the
clean model is minimized.
corruption clean trained on noise clean (compressed) trained on noise (compressed)
contrast-1 68.198 66.528 62.502 63.876
contrast-2 63.392 60.634 55.626 57.308
contrast-3 53.878 47.57 42.024 42.434
contrast-4 30.698 17.34 16.172 13.122
contrast-5 9.746 2.798 3.362 2.07
fog-1 67.274 65.148 61.334 62.91
fog-2 63.77 60.398 56.51 57.746
fog-3 59.51 53.752 51.188 51.292
fog-4 58.098 51.34 50.064 49.324
fog-5 50.996 39.586 42.874 40.34
Table 4. Detailed results for the fog and contrast corruptions on CIFAR-10-C. Both adversarial training and Gaussian data augmenation
signiÔ¨Åcantly degrade performance on these corruptions.
corruption clean adv Gaussian (0.1) Gaussian (0.4)
contrast-0 94.73 86.65 90.51 76.45
contrast-1 94.22 84.59 77.12 50.71
contrast-2 93.67 82.09 63.71 36.49
contrast-3 92.51 76.40 43.74 25.96
contrast-4 85.66 55.29 19.36 17.98
fog-0 94.90 86.75 91.53 78.87
fog-1 94.75 84.65 86.05 65.50
fog-2 93.98 79.16 77.93 51.99
fog-3 91.69 68.41 64.11 38.62
fog-4 76.58 44.17 38.01 24.04
C. Training and Testing on Gaussian Noise
In Section 6, we mentioned that it is not trivial to learn the distribution of noisy images simply by augmenting the training
data distribution. In Tables 5 and 6 we present more information about the performance of the models we trained and tested
on various scales of Gaussian noise.
D. Results on MNIST
MNIST is a special case when it comes to the relationship between small adversarial perturbations and generalization in
noise. Indeed prior has already observed that an MNIST model can trivially become robust to small l1perturbations by
learning to threshold the input (Schmidt et al., 2018), and observed that the model from Madry et al. (2017) indeed seems to
do this. When we investigated this model in different noise distributions we found it generalizes worse than a naturally
trained model, results are shown in Table 7. Given that it is possible for a defense to overÔ¨Åt to a particular lpmetric, future
work would be strengthened by demonstrating improved generalization outside the natural data distribution.
Table 5. Wide ResNet-28-10 (Zagoruyko & Komodakis, 2016) trained and tested on CIFAR-10 with Gaussian noise with standard
deviation.
 0.00625 0.0125 0.025 0.075 0.15 0.25
Training Accuracy 100% 100% 100% 100% 99.9% 99.4%
Test Accuracy 96.0% 95.5% 94.8% 90.4% 77.5% 62.2%Adversarial Examples Are a Natural Consequence of Test Error in Noise
Table 6. The models from Section 6 trained and tested on ImageNet with Gaussian noise with standard deviation ; the column labeled 0
refers to a model trained only on clean images.
 0 0.1 0.2 0.4 0.6 0.8
Clean Training Accuracy 91.5% 90.8% 89.9% 87.7% 86.1% 84.6%
Clean Test Accuracy 75.9% 75.5% 75.2% 74.2% 73.3% 72.4%
Noisy Training Accuracy   89.0% 85.7% 78.3% 71.7% 65.2%
Noisy Test Accuracy   73.9% 70.9% 65.2% 59.7% 54.0%
Table 7. The performance of ordinarily and adversarially trained MNIST models on various noise distributions.
Pepper Gaussian stAdv PCA-100
Cleanp= 0:2= 0:3= 1:0= 0:3
Model Accuracy Accuracy Accuracy Accuracy Accuracy
Clean 99.2% 81.4% 96.9% 89.5% 63.3%
Adv 98.4% 27.5% 78.2% 93.2% 47.1%
Here we provide more detail for the noise distributions we used to evaluate the MNIST model. The stAdv attack deÔ¨Ånes a
Ô¨Çow Ô¨Åeld over the pixels of the image and shifts the pixels according to this Ô¨Çow. The Ô¨Åeld is parameterized by a latent
Z. When we measure accuracy against our randomized variant of this attack, we randomly sample Zfrom a multivariate
Gaussian distribution with standard deviation . To implement this attack we used the open sourced code from Xiao et al.
(2018). PCA-100 noise Ô¨Årst samples noise from a Gaussian distribution N(0;), and then projects this noise onto the Ô¨Årst
100 PCA components of the data.
E. The Gaussian Isoperimetric Inequality
Here we will discuss the Gaussian isoperimetric inequality more thoroughly than we did in the text. We will present some of
the geometric intuition behind the theorem, and in the end we will show how the version quoted in the text follows from the
form in which the inequality is usually stated.
The historically earliest version of the isoperimetric inequality, and probably the easiest to understand, is about areas of
subsets of the plane and has nothing to do with Gaussians at all. It is concerned with the following problem: among all
measurable subsets of the plane with area A, which ones have the smallest possible perimeter?2One picture to keep in mind
is to imagine that you are required to fence off some region of the plane with area Aand you would like to use as little fence
as possible. The isoperimetric inequality says that the sets which are most ‚ÄúefÔ¨Åcient‚Äù in this sense are balls.
Some care needs to be taken with the deÔ¨Ånition of the word ‚Äúperimeter‚Äù here ‚Äî what do we mean by the perimeter of some
arbitrary subset of R2? The deÔ¨Ånition that we will use involves the concept of the -boundary measure we discussed in the
text. For any set Eand any>0, recall that we deÔ¨Åned the -extension ofE, writtenE, to be the set of all points which
are withinof a point in E; writingA(E)for the area of E, we then deÔ¨Åne the perimeter of Eto be
surf(E) := lim inf
!01
(A(E) A(E)):
A good way to convince yourself that this is reasonable is to notice that, for small ,E Elooks like a small band around
the perimeter of Ewith width. The isoperimetric inequality can then be formally expressed as giving a bound on the
quantity inside the limit in terms of what it would be for a ball. (This is slightly stronger than just bounding the perimeter,
that is, bounding the limit itself, but this stronger version is still true.) That is, for any measurable set ER2,
1
(A(E) A(E))2p
A(E) +:
It is a good exercise to check that we have equality here when Eis a ball.
There are many generalizations of the isoperimetric inequality. For example, balls are also the subsets in Rnwhich have
minimal surface area for a given Ô¨Åxed volume, and the corresponding set on the surface of a sphere is a ‚Äúspherical cap,‚Äù
2The name ‚Äúisoperimetric‚Äù comes from a different, but completely equivalent, way of stating the question: among all sets with the
same Ô¨Åxed perimeter, which ones have the largest possible area?Adversarial Examples Are a Natural Consequence of Test Error in Noise
Figure 9. The Gaussian isoperimetric inequality relates the amount of probability mass contained in a set Eto the amount contained in its
-extensionE. A sample from the Gaussian is equally likely to land in the pink set on the left or the pink set on the right, but the set on
the right has a larger -extension. The Gaussian isoperimetric inequality says that the sets with the smallest possible -extensions are half
spaces.
the set of points inside a circle drawn on the surface of the sphere. The version we are most concerned with in this paper
is the generalization to a Gaussian distribution. Rather than trying to relate the volume of Eto the volume of E, the
Gaussian isoperimetric inequality is about the relationship between the probability that a random sample from the Gaussian
distribution lands in EorE. Other than this, though, the question we are trying to answer is the same: for a given
probabilityp, among all sets Efor which the probability of landing in Eisp, when is the probability of landing in Eas
small as possible?
The Gaussian isoperimetric inequality says that the sets that do this are half spaces. (See Figure 9.) Just as we did in the
plane, it is convenient to express this as a bound on the probability of landing in Efor an arbitrary measurable set E. This
can be stated as follows:
Theorem. Consider the standard normal distribution qonRn, and letEbe a measurable subset of Rn. Write
(t) =1p
2Zt
 1exp(x2=2)dx;
the cdf of the one-variable standard normal distribution.
For a measurable subset ERn, write
(E) =  1(Pxq[x2E]). Then for any 0,
Pxp[d(x;E)](
(E) +):
The version we stated in the text involved 
q(E), the median distance from a random sample from qto the closest point
inE. This is the same as the smallest for which Pxp[d(x;E)] =1
2. So, when=
q(E), the left-hand side of the
Gaussian isoperimetric inequality is1
2, giving us that (
+
q(E))1
2.
Since  1is a strictly increasing function, applying it to both sides preserves the direction of this inequality. But
 1(1
2) = 0 , so we in fact have that 
q(E) 
, which is the statement we wanted.
F. Visualizing the Optimal Curves
In this section we visualize the predicted relationship between worst-case l2perturbations and generalization in noise as
described by Equation 1 in Section 4. This also visualizes the optimal bound according to the isoperimetric inequality,
although the l2perturbations would be applied to the noisy images themselves rather then clean image. In Figure 10 we plot
the optimal curves for various values of , visualize images sampled from x+N(0;), and visualize images at variousAdversarial Examples Are a Natural Consequence of Test Error in Noise
l2distance from the unperturbed clean image. Even for very large noise ( =:6), test error needs to be less than 10 15
in order to have worst-case perturbations be larger than 5:0. In order to visualize worst-case perturbations at varying l2
distances, we visualize an image that minimizes similarity according to the SSIM metric (Wang & Bovik, 2009). These
images are found by performing gradient descent to minimize the SSIM metric subject to the containt that jjx xadvjj2<.
This illustrates that achieving signiÔ¨Åcant l2adversarial robustness on Imagenet will likely require obtaining a model that
is almost perfectly robust to large Gaussian noise (or a model which signiÔ¨Åcantly violates the linearity assumption from
Section 4). To achieve l2robustness on noisy images, a model must be nearly perfect in large Gaussian noise.
G. Church Window Plots
In Ô¨Ågures appearing below, starting at Figure 11, we include many more visualizations of the sorts of church window plots
we discussed brieÔ¨Çy in Section 4. We will show an ordinarily trained model‚Äôs predictions on several different slices through
the same CIFAR test point which illustrate different aspects of the story told in this paper. These images are best viewed in
color.
H. The Distribution of Error Rates in Noise
Using some of the models that were trained on noise, we computed, for each image in the CIFAR test set, the probably that
a random Gaussian perturbation will be misclassiÔ¨Åed. A histogram is shown in Figure 20. Note that, even though these
models were trained on noise, there are still many errors around most images in the test set. While it would have been
possible for the reduced performance in noise to be due to only a few test points, we see clearly that this is not the case.
I. A Collection of Model Errors
Finally, in the Ô¨Ågures starting at Figure 21 we Ô¨Årst show a collection of iid test errors for the ResNet-50 model on the
ImageNet validation set. We also visualize the severity of the different noise distributions considered in this work, along
with model errors found by random sampling in these distributions.Adversarial Examples Are a Natural Consequence of Test Error in Noise
Figure 10. Top: The optimal curves on ImageNet for different values of . This is both the optimum established by the Gaussian
isoperimetric inequality and the relationship described in Equation 1. Middle: Visualizing different coordinates of the optimal curves.
First, random samples from x+N(0;I)for different values of .Bottom: Images at different l2distances from the unperturbed clean
image. Each image visualized is the image at the given l2distance which minimizes visual similarity according to the SSIM metric. Note
that images at l2<5have almost no perceptible change from the clean image despite the fact that SSIM visual similarity is minimized.Adversarial Examples Are a Natural Consequence of Test Error in Noise
Figure 11. A slice through a clean test point (black, center image), the closest error found using PGD (blue, top image), and a random
error found using Gaussian noise (red, bottom image). For this visualization, and all others in this section involving Gaussian noise, we
used noise with = 0:05, at which the error rate was about 1.7%. In all of these images, the black circle indicates the distance at which
the typical such Gaussian sample will lie. The plot on the right shows the probability that the model assigned to its chosen class. Green
indicates a correct prediction, gray or white is an incorrect prediction, and brighter means more conÔ¨Ådent.Adversarial Examples Are a Natural Consequence of Test Error in Noise
Figure 12. A slice through a clean test point (black, center image), the closest error found using PGD (blue, top image), and the average
of a large number of errors randomly found using Gaussian noise (red, bottom image). The distance from the clean image to the PGD
error was 0.12, and the distance from the clean image to the averaged error was 0.33. The clean image is assigned the correct class with
probability 99.9995% and the average and PGD errors are assigned the incorrect class with probabilities 55.3% and 61.4% respectively.
However, it is clear from this image that moving even a small amount into the orange region will increase these latter numbers signiÔ¨Åcantly.
For example, the probability assigned to the PGD error can be increased to 99% by moving it further from the clean image in the same
direction by a distance of 0.07.
Figure 13. A slice through a clean test point (black, center image), a random error found using Gaussian noise (blue, top image), and the
average of a large number of errors randomly found using Gaussian noise (red, bottom image).Adversarial Examples Are a Natural Consequence of Test Error in Noise
Figure 14. A slice through a clean test point (black, center image) and two random errors found using Gaussian noise (blue and red, top
and bottom images). Note that both random errors lie very close to the decision boundary, and in this slice the decision boundary does not
appear to come close to the clean image.
Figure 15. A slice through three random errors found using Gaussian noise. (Note, in particular, that the black point in this visualization
does not correspond to the clean image.)Adversarial Examples Are a Natural Consequence of Test Error in Noise
Figure 16. A completely random slice through the clean image.
Figure 17. Some visualizations of the same phenomenon, but using pepper noise rather than Gaussian noise. In all of these visualizations,
we see the slice through the clean image (black, center image), the same PGD error as above (red, bottom image), and a random error
found using pepper noise (blue, top image). In the visualization on the left, we used an amount of noise that places the noisy image further
from the clean image than in the Gaussian cases we considered above. In the visualization in the center, we selected a noisy image which
was assigned to neither the correct class nor the class of the PGD error. In the visualization on the right, we selected a noisy image which
was assigned to the same class as the PGD error.Adversarial Examples Are a Natural Consequence of Test Error in Noise
Figure 18. Not all slices containing a PGD error and a random error look like Figure 3. This image shows a different PGD error which is
assigned to a different class than the random error.
Figure 19. A slice with the same black point as in Figure 3 from the main text, together with an error from the clean set (blue) and an
adversarially constructed error (red) which are both assigned to the same class (‚Äúelephant‚Äù). We see a different slice through the same test
point but at a larger scale. This slice includes an ordinary test error along with an adversarial perturbation of the center image constructed
with the goal of maintaining visual similarity while having a large l2distance. The two errors are both classiÔ¨Åed (incorrectly) by the
model as ‚Äúelephant.‚Äù This adversarial error is actually farther from the center than the test error, but they still clearly belong to the same
connected component. This suggests that defending against worst-case content-preserving perturbations (Gilmer et al., 2018a) requires
removing all errors at a scale comparable to the distance between unrelated pairs of images.Adversarial Examples Are a Natural Consequence of Test Error in Noise
Figure 20. The cdf of the error rates in noise for images in the test set. The blue curve corresponds to a model trained and tested on
noise with= 0:1, and the green curve is for a model trained and tested at = 0:3. For example, the left most point on the blue curve
indicates that about 40% of test images had an error rate of at least 10 3.
Figure 21. A collection of adversarially chosen model errors. These errors appeared in the ImageNet validation set. Despite the high
accuracy of the model there remain plenty of errors in the test set that a human would not make.Adversarial Examples Are a Natural Consequence of Test Error in Noise
Figure 22. A collection of adversarially chosen model errors. These errors appeared in the ImageNet validation set. Despite the high
accuracy of the model there remain plenty of errors in the test set that a human would not make.
Figure 23. Visualizing the severity of Gaussian noise, along with model errors found in this noise distribution. Note the model shown here
was trained at noise level =:6.